@model IEnumerable<TodoApp.Models.TodoTask>

@{
    ViewData["Title"] = "Lista Zadań";
    var selectedDate = ViewBag.SelectedDate ?? DateTime.Today.ToString("yyyy-MM-dd");
    var filter = ViewBag.Filter ?? "all";
}

<div class="container">
    <h2 class="my-4">Zadania</h2>

    @if (ViewBag.Notification != null)
    {
        <div class="alert alert-danger" role="alert">
            @ViewBag.Notification
        </div>
    }

    @if (ViewBag.TomorrowNotification != null)
    {
        <div class="alert alert-warning" role="alert">
            @ViewBag.TomorrowNotification
        </div>
    }

    <form asp-controller="Tasks" asp-action="Index" method="get">
        <div class="form-group mb-4">
            <label for="datePicker">Wybierz datę</label>
            <input type="text" class="form-control datepicker" id="datePicker" name="selectedDate" value="@selectedDate" placeholder="Wybierz datę" onchange="this.form.submit();" />
        </div>
        <div class="form-group mb-4 d-flex justify-content-between align-items-center">
            <div>
                <a href="@Url.Action("Create", "Tasks")" class="btn btn-primary">Dodaj nowe zadanie</a>
            </div>
            <div class="d-flex align-items-center" style="gap: 10px;">
                <label for="filter" style="margin-right: 20px;">Pokaż:</label>
                <select id="filter" class="form-control" style="width: 150px;" name="filter" onchange="this.form.submit();">
                    <option value="all" selected="@(filter == "all" ? "selected" : null)">Wszystkie</option>
                    <option value="completed" selected="@(filter == "completed" ? "selected" : null)">Wykonane</option>
                    <option value="pending" selected="@(filter == "pending" ? "selected" : null)">Do wykonania</option>
                </select>
                <button type="button" class="btn btn-danger" style="height: 38px;" onclick="deleteFilteredTasks()">Usuń wyświetlone</button>
            </div>
        </div>
    </form>
    <table class="table table-dark">
        <thead>
            <tr>
                <th scope="col">Tytuł</th>
                <th scope="col">Opis</th>
                <th scope="col">Data wykonania</th>
                <th scope="col">Stan</th>
                <th scope="col">Akcje</th>
            </tr>
        </thead>
        <tbody id="task-list">
            @foreach (var item in Model)
            {
                <tr id="task-@item.Id" class="@(item.IsCompleted ? "table-success" : "")" data-status="@(item.IsCompleted ? "completed" : "pending")">
                    <td>@item.Title</td>
                    <td>@item.Description</td>
                    <td>@item.DueDate.ToShortDateString()</td>
                    <td>@(item.IsCompleted ? "Zakończone" : "Niezakończone")</td>
                    <td>
                        <a class="btn btn-info" asp-action="Edit" asp-route-id="@item.Id" asp-route-selectedDate="@ViewBag.SelectedDate">Edytuj</a>
                        <button class="btn btn-danger" onclick="deleteTask(@item.Id)">Usuń</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    $(document).ready(function() {
        var selectedDate = '@selectedDate';
        $('#datePicker').datepicker({
            format: 'yyyy-mm-dd',
            autoclose: true
        }).datepicker('setDate', selectedDate);

        $('#filter').change(function() {
            filterTasks($(this).val());
        });

        filterTasks($('#filter').val()); // Ensure tasks are filtered on load
    });

    function filterTasks(filterValue) {
        $('#task-list tr').each(function() {
            var taskStatus = $(this).data('status');
            if (filterValue === 'all' || taskStatus === filterValue) {
                $(this).show();
            } else {
                $(this).hide();
            }
        });
    }

    function deleteTask(taskId) {
        if (confirm('Czy na pewno chcesz usunąć to zadanie?')) {
            $.ajax({
                url: '@Url.Action("DeleteTask", "Tasks")',
                type: 'POST',
                data: { id: taskId },
                success: function() {
                    $('#task-' + taskId).remove();
                },
                error: function() {
                    alert('Wystąpił błąd podczas usuwania zadania.');
                }
            });
        }
    }

    function deleteFilteredTasks() {
        var filterValue = $('#filter').val();
        var selectedDate = $('#datePicker').val();
        if (confirm('Czy na pewno chcesz usunąć wszystkie wyświetlone zadania?')) {
            $.ajax({
                url: '@Url.Action("DeleteFilteredTasks", "Tasks")',
                type: 'POST',
                data: { selectedDate: selectedDate, filter: filterValue },
                success: function() {
                    $('#task-list tr:visible').remove();
                },
                error: function() {
                    alert('Wystąpił błąd podczas usuwania zadań.');
                }
            });
        }
    }
</script>

